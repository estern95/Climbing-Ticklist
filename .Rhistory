source('~/Documents/Climbing Ticklist/tick_list_aggregation.R', echo=TRUE)
ticks <- mp_ticks_raw %>%
bind_rows(gs_ticks_raw) %>%
separate(grade, into = c("grade", "seriousness"), sep = " ") %>%
mutate(year = as.character(year(date)),
boulder_grade = ifelse(str_detect(grade, "V"), grade, NA),
# boulder_grade = as_factor() %>%
#   fct_relevel(paste0("V", 0:15)),
grade = ifelse(str_detect(grade, "V"), NA, grade),
grade = as_factor(grade) %>%
fct_relevel(fcts$grade_fct),
num_grade = str_remove_all(grade, "[-+abcd//]"),
num_grade = if_else(num_grade %in% c("5.1212", "5.1213"), "5.12", num_grade) %>%
as_factor() %>%
fct_relevel(paste0("5.", 0:14)),
year = ifelse(is.na(year), "2018", year)) %>%
distinct(route, route_type, .keep_all = T)
write_rds(ticks, "ticks.rds")
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(readr)
library(shiny)
library(tidyverse)
library(ggthemes)
ticks <- read_rds("ticks.rds") %>%
filter(route_type %in% c("Sport", "Trad"),
ticked == T) %>%
group_by(num_grade, year) %>%
mutate(Count = n()) %>%
ungroup
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(readr)
library(shiny)
library(tidyverse)
library(ggthemes)
ticks <- read_rds("ticks.rds") %>%
filter(route_type %in% c("Sport", "Trad"),
ticked == T) %>%
group_by(num_grade, year) %>%
mutate(Count = n()) %>%
ungroup
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_line(stat = "identity",
position = "dodge") +
scale_color_gdocs() +
theme_excel_new() +
theme(axis.text.x = element_text(angle = 45))
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_line(stat = "identity") +
scale_color_gdocs() +
theme_excel_new() +
theme(axis.text.x = element_text(angle = 45))
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_line(stat = "identity")
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_line()
View(ticks)
ticks <- read_rds("ticks.rds") %>%
filter(route_type %in% c("Sport", "Trad"),
ticked == T,
year   != 2010) %>%
group_by(num_grade, year) %>%
mutate(Count = n()) %>%
ungroup
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_line()
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_abline()
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_path()
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
y = Count) +
geom_point()
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
group = year,
y = Count) +
geom_point() +
geom_line()
# Chunk 1: global
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(readr)
library(shiny)
library(tidyverse)
library(ggthemes)
ticks <- read_rds("ticks.rds") %>%
filter(route_type %in% c("Sport", "Trad"),
ticked == T,
year   != 2010) %>%
group_by(num_grade, year) %>%
mutate(Count = n()) %>%
ungroup
# Chunk 2
# Reactive that returns the whole dataset if there is no brush
selectedData <- reactive({
data <- brushedPoints(ticks, input$plot1_brush)
if (nrow(data) == 0)
data <- ticks
data %>%
select(route, grade, route_type, year, notes)
})
# Chunk 3
plotOutput("plot1", brush = brushedPoints(id = "plot1_brush"))
output$plot1 <- renderPlot({
ticks %>%
ggplot() +
aes(x = num_grade,
color = year,
group = year,
y = Count) +
geom_point() +
geom_line() +
scale_color_gdocs() +
theme_excel_new() +
theme(axis.text.x = element_text(angle = 45))
})
# Chunk 4
renderPlot({
selectedData() %>%
mutate(num_grade = str_remove_all(grade, "[-+abcd//]"),
num_grade = if_else(num_grade %in% c("5.1212", "5.1213"), "5.12", num_grade) %>%
as_factor() %>%
fct_relevel(paste0("5.", 0:14))) %>%
group_by(num_grade,
route_type) %>%
summarise(Count = n()) %>%
ungroup() %>%
ggplot() +
aes(x = num_grade,
fill = route_type,
label = Count,
y     = Count) +
geom_bar(stat = "identity") +
geom_text(stat = "identity",
position = position_stack(vjust = .5)) +
scale_fill_gdocs() +
theme_excel_new() +
theme(axis.text.x = element_text(angle = 45))
})
# Chunk 5
DT::renderDataTable({
selectedData()
})
